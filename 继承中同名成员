#include<iostream>

using namespace std;
 
//继承同名成员
class Base
{
public:
	Base()
	{
		m_A = 100;
	}

	void func()
	{
		cout << "Base作用域下的函数funct（）调用" << endl;
	}
	int m_A;
};

class Son :public Base
{
public:
	Son()
	{
		 m_A = 200;
	}
	void func()
	{
		cout << "Son作用域下的函数funct（）调用" << endl;
	}
	int m_A;
};
void test01()
{
	Son s;
	cout << "Son:m_A=" << s.m_A << "Base:m_A=" << s.Base::m_A << endl;//同名成员属性处理方式
	s.func();//调用子类中的同名成员函数
	s.Base::func();//调用父类中的同名成员函数
	//当子类和父类拥有同名成员函数，子类会隐藏父类中同名成员函数，加作用域可以访问到父类中同名成员函数
}
int main()
{
	test01();
	system("pause");
	return 0;
}
