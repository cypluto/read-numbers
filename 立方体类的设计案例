#include<iostream>
#include<string.h>
using namespace std;
//立方体类设计案例
//1、创建立方体类
//2、设计属性
//3、设计行为 获取立方体面积和体积
//分别利用全局函数和成员函数 判断两个立方体是否相等

class cube
{

private:

	//属性
	int m_L;//长
	int m_W;//宽
	int m_H;//高
public:

	//行为
	
	//设置长
	void setL(int l)
	{
		m_L = l;
	}
	//获取长
	int getL()
	{
		return m_L;
	}

	//设置宽
	void setW(int w)
	{
		m_W = w;
	}
	//获取宽
	int getW()
	{
		return m_W;
	}

	//设置高
	void setH(int h)
	{
		m_H = h;
	}
	//获取高
	int getH()
	{
		return m_H;
	}
	//获取面积
	int calculateS()
	{
		return (m_L * m_W + m_L * m_H + m_W * m_H) * 2;
	}
	//获取体积
	int calculateV()
	{
		return m_L * m_W * m_H;
	}
	//利用成员函数判断两个立方体是否相等
	bool isSamebyClass(cube& c2)
	{
		if (m_L == c2.getL() && m_W == c2.getW() && m_H == c2.getH())
			return true;
		else return false;
	}
};
//利用全局函数判断 两个立方体是否相等
bool isSame(cube& c1, cube& c2)
{
	if (c1.getL() == c2.getL() && c1.getW() == c2.getW() && c1.getH() == c2.getH())
		return true;
	else return false;
}
int main()
{
	//创建一个立方体对象
	cube c1;
	c1.setL(10);
	c1.setW(10);
	c1.setH(10);

	cout << "c1的面积为：" << c1.calculateS() << endl;
	cout<< "c1的体积为：" << c1.calculateV() << endl;
	//创建第二个立方体对象
	cube c2;
	c2.setL(10);
	c2.setW(20);
	c2.setH(10);
	bool ret = isSame(c1, c2);
	bool ret1 = c1.isSamebyClass(c2);
	if (ret)
		cout << "is same" << endl;
	else
		cout << "is not same" << endl;
	if (ret1)
		cout << "is same" << endl;
	else
		cout << "is not same" << endl;
	return 0;
}
