#include<iostream>
#include<deque>

using namespace std;

//deque构造函数

void printDeque(const deque<int>& d)//为了函数不能修改参数其值，加入const，需使用const_iterator迭代器
{
	for (deque<int>::const_iterator it = d.begin(); it != d.end(); it++)//容器中的数据不可以修改：自读迭代器const_iterator
	{
		cout << *it << ' ';
	}
	cout << endl;
}

void test01()
{
	deque<int>d1;
	for (int i = 0; i < 10; i++)
	{
		d1.push_back(i);
	}
	printDeque(d1);

	deque<int>d2(d1.begin(), d1.end()-3);//区间复制
	printDeque(d2);

	deque<int>d3(10, 100);
	printDeque(d3);

	deque<int>d4(d3);
	printDeque(d4);


}

int main()
{
	test01();
	system("pause");
	return 0;
}
